{"version":3,"sources":["block2.js"],"names":["BLOCK","require","cc","Class","extends","clsBlock","properties","time","start","director","getCollisionManager","enabled","onCollisionEnter","other","self","name","substring","heroCarScript","node","getComponent","setSpeed","getSpeedUpMax","setSpeedUpMax","SPEED_UP_TIME","update","dt","setSpeedMax"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASJ,MAAMK,QADV;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,cAAM;AAhBE,KAHP;;AAsBL;;AAEA;;AAEAC,SA1BK,mBA0BI;AACLN,WAAGO,QAAH,CAAYC,mBAAZ,GAAkCC,OAAlC,GAA4C,IAA5C;AACH,KA5BI;;;AA8BLC,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrC,YAAID,MAAME,IAAN,CAAWC,SAAX,CAAqB,CAArB,EAAuB,CAAvB,KAA6B,KAAjC,EAAwC;AACpC,iBAAKC,aAAL,GAAqBJ,MAAMK,IAAN,CAAWC,YAAX,CAAwB,KAAxB,CAArB;AACA,iBAAKF,aAAL,CAAmBG,QAAnB,CAA4B,KAAKH,aAAL,CAAmBI,aAAnB,EAA5B;AACA,iBAAKJ,aAAL,CAAmBK,aAAnB;AACA,iBAAKf,IAAL,GAAYgB,gBAAc,EAA1B;AACH;AACJ,KArCI;;AAuCLC,UAvCK,kBAuCGC,EAvCH,EAuCO;AACR,YAAI,KAAKlB,IAAL,GAAY,CAAhB,EAAmB;AACf,iBAAKA,IAAL;AACA,gBAAI,KAAKA,IAAL,IAAa,CAAjB,EAAoB;AAChB,qBAAKU,aAAL,CAAmBS,WAAnB;AACH;AACJ;AACJ;AA9CI,CAAT","file":"block2.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\game","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\nvar BLOCK = require(\"block\");\r\n\r\ncc.Class({\r\n    extends: BLOCK.clsBlock,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        time: 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        cc.director.getCollisionManager().enabled = true;\r\n    },\r\n\r\n    onCollisionEnter: function (other, self) {\r\n        if (other.name.substring(0,3) == 'car') {\r\n            this.heroCarScript = other.node.getComponent(\"car\");\r\n            this.heroCarScript.setSpeed(this.heroCarScript.getSpeedUpMax());\r\n            this.heroCarScript.setSpeedUpMax();\r\n            this.time = SPEED_UP_TIME/60;\r\n        }\r\n    },\r\n\r\n    update (dt) {\r\n        if (this.time > 0) {\r\n            this.time--;\r\n            if (this.time <= 0) {\r\n                this.heroCarScript.setSpeedMax();\r\n            }\r\n        }\r\n    },\r\n});\r\n"]}