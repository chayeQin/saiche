{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\game/assets\\script\\game\\block5.js"],"names":["BLOCK","require","cc","Class","extends","clsBlock","properties","touchAI","targetX","changeLane","touchX","time","time2","selfX","audioHorn","type","AudioSource","default","start","director","getCollisionManager","enabled","onCollisionEnter","other","self","name","substring","heroCarScript","node","getComponent","gear","getNowGear","tag","COLLIDE_GEAR","x","t","getType","cfg","BLOCK_CONFIG","play","horiMax","UTIL","randInt","horiLenMin","horiLenMax","audioCollision","nowSpeed","getSpeed","gearNow","shiftBigX","BIG_EXPLODE_PER_MIN_X","BIG_EXPLODE_PER_MAX_X","shiftSmallX","SMALL_EXPLODE_PER_MIN_X","SMALL_EXPLODE_PER_MAX_X","SMALL_EXPLODE_TIME_PARAM","nodeRotateAction","SMALL_COLLIDE_ROTATE_DT2","SMALL_COLLIDE_ROTATE2","rollBigOrSmall","setSpeed","BIG_EXPLODE_SPEED","BIG_EXPLODE_X_TIME_PARAM","setCanChangeLane","leftBigRoll","playBigCrashSound","playSmallCrashSound","SMALL_COLLIDE_ROTATE","SMALL_EXPLODE_PARAM","rightBigRoll","update","dt","changeX","changeSpeed","Math","abs","getHorizonSpeed"],"mappings":"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","file":"block5.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\game","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\nvar BLOCK = require(\"block\");\r\n\r\ncc.Class({\r\n    extends: BLOCK.clsBlock,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        touchAI: false,\r\n        targetX: 0,\r\n        changeLane: 10,\r\n        touchX: 0,\r\n        time: 0,\r\n        time2: 0,\r\n        selfX: 0,\r\n        audioHorn: {\r\n            type: cc.AudioSource,\r\n            default: null\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        cc.director.getCollisionManager().enabled = true;\r\n    },\r\n\r\n    onCollisionEnter: function (other, self) {\r\n        if (other.name.substring(0, 3) != \"car\") return;\r\n\r\n        this.heroCarScript = other.node.getComponent(\"car\");\r\n        var gear = this.heroCarScript.getNowGear()\r\n        if (self.tag == 1 && this.touchAI == false && gear >= COLLIDE_GEAR) {\r\n            this.touchAI = true;\r\n            this.selfX = this.node.x;\r\n            this.targetX = other.node.x;\r\n            var t = this.getType();\r\n            var cfg = BLOCK_CONFIG[t-1];\r\n            this.audioHorn.play();\r\n            this.horiMax = UTIL.randInt(cfg.horiLenMin, cfg.horiLenMax); \r\n        }\r\n\r\n        if (self.tag == 0) {\r\n            this.audioCollision.play();\r\n            var nowSpeed = this.heroCarScript.getSpeed();\r\n            if (nowSpeed  > 72) {\r\n                nowSpeed = 72;\r\n            }\r\n            var gearNow = this.heroCarScript.getNowGear();\r\n            var shiftBigX = UTIL.randInt(BIG_EXPLODE_PER_MIN_X, BIG_EXPLODE_PER_MAX_X);\r\n            var shiftSmallX = UTIL.randInt(SMALL_EXPLODE_PER_MIN_X, SMALL_EXPLODE_PER_MAX_X);\r\n            this.time = gearNow * SMALL_EXPLODE_TIME_PARAM;\r\n\r\n            if (this.selfX > this.targetX) {\r\n                this.touchX = - shiftSmallX;\r\n                this.nodeRotateAction(self.node, SMALL_COLLIDE_ROTATE_DT2, SMALL_COLLIDE_ROTATE2, 1);\r\n                this.nodeRotateAction(self.node, SMALL_COLLIDE_ROTATE_DT2, -SMALL_COLLIDE_ROTATE2, 1);\r\n                if (this.rollBigOrSmall(gearNow) == true) {\r\n                    this.heroCarScript.setSpeed(BIG_EXPLODE_SPEED);\r\n                    this.time2 = gearNow * BIG_EXPLODE_X_TIME_PARAM;\r\n                    this.touchX = - shiftBigX;\r\n                    this.heroCarScript.setCanChangeLane(false);\r\n                    this.leftBigRoll(other.node, this.heroCarScript);\r\n                    this.heroCarScript.playBigCrashSound();\r\n                } else {\r\n                    this.heroCarScript.playSmallCrashSound();\r\n                    this.nodeRotateAction(other.node, 0.3, -SMALL_COLLIDE_ROTATE, 1);\r\n                    this.nodeRotateAction(other.node, 0.3, SMALL_COLLIDE_ROTATE, 1);\r\n                    this.heroCarScript.setSpeed(nowSpeed - (SMALL_EXPLODE_PARAM * gearNow));\r\n                }\r\n            } else {\r\n                this.touchX = shiftSmallX;\r\n                this.nodeRotateAction(self.node, SMALL_COLLIDE_ROTATE_DT2, SMALL_COLLIDE_ROTATE2, 1);\r\n                this.nodeRotateAction(self.node, SMALL_COLLIDE_ROTATE_DT2, -SMALL_COLLIDE_ROTATE2, 1);\r\n                if (this.rollBigOrSmall(gearNow) == true) {\r\n\r\n                    this.heroCarScript.setSpeed(BIG_EXPLODE_SPEED);\r\n                    this.time2 = gearNow * BIG_EXPLODE_X_TIME_PARAM;\r\n                    this.touchX = shiftBigX;\r\n                    this.heroCarScript.setCanChangeLane(false);\r\n                    this.rightBigRoll(other.node, this.heroCarScript);\r\n                    this.heroCarScript.playBigCrashSound();\r\n\r\n                } else {\r\n                    this.heroCarScript.playSmallCrashSound();\r\n                    this.nodeRotateAction(other.node, 0.3, SMALL_COLLIDE_ROTATE, 1);\r\n                    this.nodeRotateAction(other.node, 0.3, -SMALL_COLLIDE_ROTATE, 1);\r\n                    this.nodeRotateAction(self.node, 0.3, -SMALL_COLLIDE_ROTATE2, 1);\r\n                    this.nodeRotateAction(self.node, 0.3, SMALL_COLLIDE_ROTATE2, 1);\r\n                    this.heroCarScript.setSpeed(nowSpeed - (SMALL_EXPLODE_PARAM * gearNow));\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    update (dt) {\r\n        if (this.touchAI == false) {\r\n            return;\r\n        }\r\n        if (this.time > 0) {\r\n            this.heroCarScript.changeX(this.touchX);\r\n            this.time --;\r\n        }\r\n        if (this.time2 > 0) {\r\n            this.heroCarScript.changeSpeed(-12);\r\n            this.time2 --;\r\n        }\r\n        if (this.node.x == this.targetX) {\r\n            return;\r\n        }\r\n        if (Math.abs(this.node.x - this.targetX) < this.changeLane) {\r\n            this.node.x = this.targetX;\r\n            return;\r\n        } \r\n\r\n        if (Math.abs(this.node.x - this.selfX) < this.horiMax)\r\n        {\r\n            if (this.node.x > this.targetX) {\r\n                this.node.x -= this.getHorizonSpeed();\r\n            } else {\r\n                this.node.x += this.getHorizonSpeed();\r\n            }\r\n        }\r\n    },\r\n});\r\n"]}