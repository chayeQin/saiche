{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\game/assets\\script\\game\\block.js"],"names":["clsBlock","cc","Class","extends","Component","properties","_type","_x","_y","_speed","_horizonSpeed","heroCarScript","audioCollision","type","AudioSource","default","start","getType","setType","value","getX","setX","getY","setY","getSpeed","setSpeed","getHorizonSpeed","updateData","blockData","colliders","node","getComponents","BoxCollider","cfg","BLOCK_CONFIG","horiSpeed","i","length","tmpCollider","tag","size","width","checkWidth","height","checkHeight","console","log","nodeRotateAction","during","angle","time","actions","action","repeat","rotateBy","push","callFunc","target","rotation","self","runAction","Sequence","leftBigRoll","setCanChangeLane","rightBigRoll","rollBigOrSmall","gear","rangeDatas","randNum","UTIL","randInt","index","inRange","rangeData","result","exports"],"mappings":"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","file":"block.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\game","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\n\r\nvar clsBlock = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        _type: 0,\r\n        _x: 0,\r\n        _y: 0,\r\n        _speed: 0,\r\n        _horizonSpeed : 0,\r\n        heroCarScript: null,\r\n\r\n        audioCollision: {\r\n            type: cc.AudioSource,\r\n            default: null\r\n        },\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    getType () {\r\n        return this._type;\r\n    },\r\n\r\n    setType (value) {\r\n        this._type = value;\r\n    },\r\n\r\n    getX () {\r\n        return this._x;\r\n    },\r\n\r\n    setX (value) {\r\n        this._x = value;\r\n    },\r\n\r\n    getY () {\r\n        return this._y;\r\n    },\r\n\r\n    setY (value) {\r\n        this._y = value;\r\n    },\r\n\r\n    getSpeed () {\r\n        return this._speed;\r\n    },\r\n\r\n    setSpeed (value) {\r\n        this._speed = value;\r\n    },\r\n\r\n    getHorizonSpeed() {\r\n        return this._horizonSpeed;\r\n    },\r\n\r\n    updateData (blockData) {\r\n        this.setType(blockData[\"type\"]);\r\n        this.setX(blockData[\"x\"]);\r\n        this.setY(blockData[\"y\"]);\r\n        this.setSpeed(blockData[\"speed\"]);\r\n\r\n        var colliders = this.node.getComponents(cc.BoxCollider);\r\n        var cfg = BLOCK_CONFIG[blockData[\"type\"] - 1];\r\n        if (cfg){\r\n            this._horizonSpeed = cfg.horiSpeed/60;\r\n            for (var i=0; i < colliders.length; ++i){ //设置ai检测范围\r\n                let tmpCollider = colliders[i]\r\n                if (tmpCollider.tag == 1){\r\n                    tmpCollider.size.width = cfg.checkWidth;\r\n                    tmpCollider.size.height = cfg.checkHeight;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        var colliders = this.node.getComponents(cc.BoxCollider);\r\n        for (var i=0; i < colliders.length; ++i){ //设置ai检测范围\r\n            let tmpCollider = colliders[i]\r\n            if (tmpCollider.tag == 1){\r\n                console.log(tmpCollider.size.width, tmpCollider.size.height)\r\n                break;\r\n            }\r\n        }\r\n\r\n    },\r\n    \r\n\r\n    nodeRotateAction (node, during, angle, time) {\r\n        let actions = [];\r\n        let action = cc.repeat(cc.rotateBy(during, angle), time);\r\n        actions.push(action);\r\n        actions.push(cc.callFunc(function (target) {\r\n            node.rotation = 0;\r\n        }, self, null));\r\n        node.runAction(new cc.Sequence(actions));\r\n    },\r\n\r\n    leftBigRoll (node, heroCarScript) {\r\n        let actions = [];\r\n        let action = null;\r\n        action = cc.repeat(cc.rotateBy(0.1, -60), 1);\r\n        actions.push(action);\r\n        action = cc.repeat(cc.rotateBy(0.35, -360), 1);\r\n        actions.push(action);\r\n        action = cc.repeat(cc.rotateBy(0.1, 60), 1);\r\n        actions.push(action);\r\n        actions.push(cc.callFunc(function (target) {\r\n            node.rotation = 0;\r\n            heroCarScript.setCanChangeLane(true);\r\n        }, self, null));\r\n        node.runAction(new cc.Sequence(actions));\r\n    },\r\n\r\n    rightBigRoll (node, heroCarScript) {\r\n        let actions = [];\r\n        let action = null;\r\n        action = cc.repeat(cc.rotateBy(0.1, 60), 1);\r\n        actions.push(action);\r\n        action = cc.repeat(cc.rotateBy(0.35, 360), 1);\r\n        actions.push(action);\r\n        action = cc.repeat(cc.rotateBy(0.1, -60), 1);\r\n        actions.push(action);\r\n        actions.push(cc.callFunc(function (target) {\r\n            node.rotation = 0;\r\n            heroCarScript.setCanChangeLane(true);\r\n        }, self, null));\r\n        node.runAction(new cc.Sequence(actions));\r\n    },\r\n\r\n    // true调用大碰撞，false调用小碰撞\r\n    rollBigOrSmall (gear) {\r\n        var rangeDatas = [\r\n            {\"limit\": 10 + (gear * 3), \"result\": true},\r\n            {\"limit\": 100, \"result\": false},\r\n        ];\r\n        var randNum = UTIL.randInt(0, 100);\r\n        var index = UTIL.inRange(randNum, rangeDatas);\r\n        var rangeData = rangeDatas[index];\r\n        return rangeData.result;\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n\r\nexports.clsBlock = clsBlock;\r\n"]}